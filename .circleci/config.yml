version: 2.1



jobs:
  build_test:
    docker:
      - image: cimg/base:current
    # resource_class: xlarge
    steps:
    - checkout
    # Install nvm
    - run:
        name: Install nvm
        command: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install
        
    - run:
        name: Install yarn and boostrap project
        command: |
          npm install -g yarn@latest
          yarn install
          # yarn kbn bootstrap
          # yarn build --docker-images --skip-os-packages --skip-docker-ubuntu
     
  build_and_push_image:
    docker:
      - image: cimg/node:16.14.2
    steps:
      - checkout

      # # Install nvm
      # - run:
      #     name: Install nvm
      #     command: |
      #       curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
      #       export NVM_DIR="$HOME/.nvm"
      #       [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      #       nvm install

      # Install yarn
      # - run:
      #     name: Install yarn and boostrap project
      #     command: |
      #       # npm install -g yarn@latest
      #       yarn install
      #       # yarn kbn bootstrap
      #       # yarn build --docker-images --skip-os-packages --skip-docker-ubuntu

      # Bootstrap the project
      - run:
          name: Bootstrap project
          command: |
            sudo yarn kbn bootstrap
            
            ls -al ./node_modules
            # yarn build --help
            yarn build --docker-images --skip-os-packages --skip-docker-ubuntu

      # Build project distributables
      - run:
          name: Build project distributables
          command: |
            ls -al
            yarn build --docker-images --skip-os-packages --skip-docker-ubuntu
          # command: yarn build --docker-images 

      # Copy build tar/zip archives
      - run:
          name: Copy build tar/zip archives
          command: |
            mkdir -p build/kibana-docker/default-ubi8
            cp target/kibana-8.2.4-SNAPSHOT-linux-x86_64.tar.gz build/kibana-docker/default-ubi8

      # Build custom image
      - run:
          name: Build custom image
          command: |
            docker build -t 243606292720.dkr.ecr.eu-west-1.amazonaws.com/cst-kibana:latest .

      # AWS ECR login
      - run:
          name: AWS ECR login
          command: |
            aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 243606292720.dkr.ecr.eu-west-1.amazonaws.com

      # Push image to AWS ECR
      - run:
          name: Push image to AWS ECR
          command: |
            docker push 243606292720.dkr.ecr.eu-west-1.amazonaws.com/cst-kibana:latest

# Define workflows
workflows:
  version: 2
  build_and_push:
    jobs:
      - build_test
